// <auto-generated />
using System;
using ArgusProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArgusProject.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20250405011759_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Argus.Sync.Data.Models.ReducerState", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LatestIntersectionsJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StartIntersectionJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ReducerStates", "public");
                });

            modelBuilder.Entity("ArgusProject.Models.Entity.LendTokenDetailsBySlot", b =>
                {
                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TxHash")
                        .HasColumnType("text");

                    b.Property<decimal>("TxIndex")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("UtxoStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ActionType")
                        .HasColumnType("integer");

                    b.Property<string>("BorrowerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BorrowerPkh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DatumType")
                        .HasColumnType("integer");

                    b.Property<decimal>("InterestAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanDuration")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanEndTime")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("OutputRefTxHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OutputRefTxIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("OwnerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerPkh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScriptHash")
                        .HasColumnType("text");

                    b.Property<string>("SpentTxHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TokenAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UtxoAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte[]>("UtxoRaw")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Subject", "Slot", "TxHash", "TxIndex", "UtxoStatus");

                    b.ToTable("LendTokenDetailsBySlot", "public");
                });

            modelBuilder.Entity("ArgusProject.Models.Entity.LendTokenDetailsBySubject", b =>
                {
                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TxHash")
                        .HasColumnType("text");

                    b.Property<decimal>("TxIndex")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("BorrowerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BorrowerPkh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DatumType")
                        .HasColumnType("integer");

                    b.Property<decimal>("InterestAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanDuration")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LoanEndTime")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("OutputRefTxHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OutputRefTxIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("OwnerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerPkh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScriptHash")
                        .HasColumnType("text");

                    b.Property<decimal>("TokenAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UtxoAmount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte[]>("UtxoRaw")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Subject", "Slot", "TxHash", "TxIndex");

                    b.ToTable("LendTokenDetailsBySubject", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
